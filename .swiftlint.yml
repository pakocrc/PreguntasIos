# By default, SwiftLint uses a set of sensible default rules you can adjust:
disabled_rules: # rule identifiers turned on by default to exclude from running
  # - switch_case_alignment
  # - line_length
  # - cyclomatic_complexity
  # - type_body_length
  # - file_length
opt_in_rules:
  # some rules are turned off by default, so you need to opt-in
  # Find all the available rules by running: `swiftlint rules`
  - empty_count

included:
  # paths to include during linting. `--path` is ignored if present.
  - PreguntasIos
  - PreguntasIosTests
  - PreguntasIosUITests
excluded: # paths to ignore during linting. Takes precedence over `included`.
  # - Source/ExcludedFolder
  # - Source/ExcludedFile.swift
  # - Source/*/ExcludedFile.swift # Exclude files with a wildcard
  - PreguntasIos/Resources/MyPlayground.playground
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
function_body_length: 210
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  - 400 # error
# or they can set both explicitly
file_length:
  warning: 500
  error: 1000
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 3 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string
  allowed_symbols: ["_"] # these are allowed in type names
identifier_name:
  min_length:  # only min_length
    error: 3 # only error
  excluded: # excluded via string array
    - id
    - URL
    - url
    - key
    - get
    - put
    - rhs
    - lhs
    - en
    - es
    - de
    - fr
    - pt
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, codeclimate, junit, html, emoji, sonarqube, markdown, github-actions-logging)
